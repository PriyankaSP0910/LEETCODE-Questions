class Solution {
  public int getMinDiff(int[] arr, int n, int k) {
    Arrays.sort(arr, 0, n);
    int max = arr[n - 1];
    int min = arr[0];
    int res = max - min;
    for (int i = 1; i < n; i++) {
      max = Math.max(arr[i - 1] + k, arr[n - 1] - k);
      min = Math.min(arr[i] - k, arr[0] + k);
      res = Math.min(res, max - min);
    }
    return res;
  }
}

// TIME COMPLEXITY: O(N*log N) + O (N) => O(N*log N)
// SPACE COMPLEXITY: O(1)
// Arrays.sort uses O(N*log N) time complexity
