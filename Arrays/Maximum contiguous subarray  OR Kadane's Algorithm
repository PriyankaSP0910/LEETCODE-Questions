public class KadaneAlgorithm {

  public static int maxSumSubArray(int a[]) {
    int maxSum = 0;
    int curSum = 0;

    for (int i = 0; i < a.length; i++) {
      curSum = curSum + a[i];

      if (curSum > maxSum) {
        maxSum = curSum;
      }

      if (curSum < 0) {
        curSum = 0;
      }
    }
    return maxSum;
  }

  public static void main(String[] args) {
    // Sample array
    int[] arr = {1, -2, -3, 4, -1, 2, 1, 5, -3};

    int maxSum = maxSumSubArray(arr);

    System.out.println("Maximum contiguous subarray sum: " + maxSum);
  }
}

//TIME COMPLEXITY: O(N)
//SPACE COMPLEXITY: 0(1)
